@*
    Freelancer Details Page - Optimized for Medical Tourists
*@
@{
}
<style>
    .service-provider-profile {
        background-color: #f8f9fa;
    }

    .provider-header {
        padding: 2rem;
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .provider-badge .badge {
        font-weight: 500;
        letter-spacing: 0.5px;
    }

    .key-info .info-item {
        padding: 1rem;
        border-bottom: 1px solid #eee;
    }

        .key-info .info-item:last-child {
            border-bottom: none;
        }

    .service-description {
        line-height: 1.8;
    }

    .specializations .badge {
        padding: 0.5rem 0.75rem;
    }

    .booking-section .btn {
        font-weight: 500;
    }

    .provider-image-placeholder {
        background-color: #f0f4f8;
    }

    .navbar {
        background-color: #ffffff !important;
        transition: background-color 0.5s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* subtle depth */
        z-index: 1000; /* stays on top */
    }

        .navbar.sticky-top, .navbar.scrolled {
            background-color: #ffffff !important;
            transition: background-color 0.5s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* subtle depth */
            z-index: 1000; /* stays on top */
        }

    .navbar-light .navbar-nav .nav-link {
        color: #000000 !important;
        font-family: 'Nunito', sans-serif;
        position: relative;
        margin-right: 25px;
        padding: 20px 0;
        font-size: 18px;
        font-weight: 600;
        transition: .5s;
    }

    .shadow-sm {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .row {
        padding-top: 10px !important;
    }
    /* Review-specific styles */
    .review-section {
        padding: 50px;
        border-radius: 10px;
    }

    .review-card {
        background-color: #fff;
        border: none;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        animation: fadeIn 0.5s ease-in;
    }

        .review-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0,0,0,0.15);
        }

        .review-card .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #86B817;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
            margin-right: 10px;
        }

        .review-card .timestamp {
            font-size: 0.85rem;
            color: #6c757d;
        }

    .review-form {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

        .review-form .form-control {
            border-radius: 8px;
            border: 1px solid #ced4da;
            transition: border-color 0.3s;
        }

            .review-form .form-control:focus {
                border-color: #3498db;
                box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);
            }

        .review-form .btn {
            border-radius: 8px;
            padding: 10px 20px;
        }

    .ratings {
        display: inline-flex;
        gap: 5px;
    }

    .star {
        color: #e4e5e9;
        cursor: pointer;
        transition: color 0.2s;
    }

        .star.active {
            color: #ffc107;
        }

    .sort-reviews {
        margin-bottom: 20px;
    }

    /* Animation for reviews */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .image-slider {
            height: 300px;
        }

        .slider-nav {
            width: 30px;
            height: 30px;
            font-size: 0.8rem;
        }
    }

    .navbar {
        background-color: #ffffff !important;
        transition: background-color 0.5s ease;
    }

        .navbar.sticky-top, .navbar.scrolled {
            background-color: #ffffff !important;
        }

    .navbar-light .navbar-nav .nav-link {
        color: #000000 !important;
        font-family: 'Nunito', sans-serif;
        position: relative;
        margin-right: 25px;
        padding: 20px 0;
        font-size: 18px;
        font-weight: 600;
        transition: .5s;
    }

    .shadow-sm {
        box-shadow: 0 0rem 0rem rgba(0, 0, 0, 0) !important;
    }

</style>
<div class="container-fluid navbar-light p-0">
    <nav class=" navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0 sticky-top shadow-sm">
        <a asp-action="Index" asp-controller="Home" class="navbar-brand p-0">
            <h1 class="text-primary m-0"><img class="fa fa-map-marker-alt me-3" src="~/Home/img/logoTest7Hedar-removebg-preview.png" alt="Logo">Ziyara</h1>

        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
            <span class="fa fa-bars"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <div class="navbar-nav ms-auto py-0">
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Admin/Dashboard">Admin</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>
                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>

                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>


                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>
                    <a class="nav-item nav-link" href="/Doctor/Dashboard">Dashboard</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "nursing")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Nurse/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "physical therapy")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Phsy/Dashboard">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "Alternative medicine")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Alt/Dashboard">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Apartment"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Apartment/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Guide"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Guide/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Transportation"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Transportation/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated)
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>


                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link ">About</a>
                    <a asp-action="Appointments" asp-controller="Home" class="nav-item nav-link">Appointments</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>




                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>


                }
                else
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>
                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link ">About</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>


                    <a class="nav-item nav-link " href="/Identity/Account/Login">Login</a>
                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <a href="/Identity/Account/Register" class="btn btn-primary rounded-pill py-2 px-4 center">Register</a>
                        </div>
                    </div>

                }
                <a class="collapse navbar-collapse" id="navbarCollapse">

                    <img src="~/Home/img/jordanflag1.gif" alt="Computer man" style="width:55px;height:35px;padding-left:5px ">
                </a>
            </div>


        </div>
    </nav>
</div>

<div class="service-provider-profile" style="margin-top:50px">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                @foreach (var Free in Model)
                {
                    <!-- Profile Header -->
                    <div class="provider-header mb-5 text-center">
                        <div class="provider-badge mb-3">
                            <span class="badge @GetServiceBadgeClass(Free.majer) px-4 py-2 fs-6">
                                @Free.majer.ToUpper()
                            </span>
                        </div>
                        <h1 class="display-5 fw-bold mb-3">@Free.fullname</h1>
                        <div class="d-flex justify-content-center align-items-center mb-4">
                            <div class="d-flex align-items-center mb-3 p-3 bg-light rounded ">
                                <i class="bi bi-geo-alt-fill text-primary fs-4 me-3"></i>
                                <div class="flex-grow-1">

                                    @if (!string.IsNullOrEmpty(Free.location1))
                                    {
                                        <a href="https://www.google.com/maps/search/?api=1&query=@Free.location1"
                                           target="_blank"
                                           class="btn btn-outline-primary btn-sm rounded-pill">
                                            View in Google Maps
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Various locations</span>
                                    }
                                </div>
                               
                            </div>

                        </div>
                    </div>

                    <!-- Main Content -->
                    <div class="row">
                        <!-- Left Column - Key Information -->
                        <div class="col-md-5 mb-4 mb-md-0">
                            <div class="card border-0 shadow-sm rounded-3 h-100">
                                <div class="card-body p-4">
                                    <div class="provider-image-placeholder mb-4 rounded-3 bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                                        <i class="fas fa-user-md fs-1 text-muted"></i>
                                    </div>

                                    <div class="key-info">
                                        <div class="info-item mb-4">
                                            <h5 class="text-muted mb-2"><i class="fas fa-language me-2"></i>Languages</h5>
                                            <p class="fs-5">@Free.language1</p>
                                        </div>

                                        <div class="info-item mb-4">
                                            <h5 class="text-muted mb-2"><i class="fas fa-dollar-sign me-2"></i>Price</h5>
                                            <p class="fs-5">$@Free.price1 per session</p>
                                        </div>

                                        <div class="info-item">
                                            <h5 class="text-muted mb-2"><i class="fas fa-briefcase me-2"></i>Experience</h5>
                                            <p class="fs-5">@Free.experience years</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Right Column - Detailed Information -->
                        <div class="col-md-7">
                            <div class="card border-0 shadow-sm rounded-3 h-100">
                                <div class="card-body p-4">
                                    <h4 class="mb-4 border-bottom pb-3"><i class="fas fa-info-circle me-2"></i>Service Details</h4>

                                    <div class="service-description mb-5">
                                        <h5 class="mb-3">About This @Free.majer Service</h5>

                                        <p class="text-muted">@Free.availalbe</p>


                                    </div>

                                    <div class="specializations mb-5">
                                        <h5 class="mb-3">Specializations</h5>
                                        <div class="d-flex flex-wrap gap-2">
                                            @foreach (var spec in GetSpecializations(Free.majer))
                                            {
                                                <span class="badge bg-light text-dark border">@spec</span>
                                            }
                                        </div>
                                    </div>

                                    <div class="booking-section mt-auto pt-3">
                                        @if (User.Identity.IsAuthenticated && User.IsInRole("Patient"))
                                        {
                                            <a asp-action="@(Free.majer == "nursing" ? "FreeNurse" : "FreeAp")"
                                               asp-controller="Tourist"
                                               asp-route-id="@Free.Id"
                                               class="btn @GetServiceButtonClass(Free.majer) btn-lg w-100 py-3">
                                                <i class="fas fa-calendar-check me-2"></i> Book Appointment
                                            </a>
                                        }
                                        else
                                        {

                                            <a href="/Identity/Account/Login?returnUrl=@Url.Action("FreeDetails","Tourist", new { id = Free.Id })"
                                               class="btn btn-outline-primary btn-lg w-100 py-3">
                                                <i class="fas fa-calendar-check me-2"></i> Book Appointment
                                            </a>
                                        }


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Review Submission Form -->
                    var Treviews = ViewData["Treviews"] as IEnumerable<dynamic> ?? new List<dynamic>();

                    @if (User.Identity.IsAuthenticated && User.IsInRole("Patient") && !Treviews.Any())
                    {
                        <div class="row mb-4 review-section">
                            <div class="col-12">
                                <h3 class="text-primary mb-3"><i class="fas fa-star me-2"></i>Write a Review</h3>
                                <form asp-action="SubmitReview" asp-controller="Tourist" method="post" class="review-form">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="serviceProviderId" value="@Free.ServiceProviderId" />
                                    <input type="hidden" name="hotelId" value="@Free.Id" />
                                    <input type="hidden" name="appointmentType" value="Freelancer" />
                                    <input type="hidden" name="returnUrl" value="@Url.Action("FreeDetails", "Tourist", new { id = Free.Id })" />
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Rating</label>
                                        <div class="ratings">
                                            <span class="star" data-rating="1" data-appointment-id="@Free.Id"><i class="fas fa-star"></i></span>
                                            <span class="star" data-rating="2" data-appointment-id="@Free.Id"><i class="fas fa-star"></i></span>
                                            <span class="star" data-rating="3" data-appointment-id="@Free.Id"><i class="fas fa-star"></i></span>
                                            <span class="star" data-rating="4" data-appointment-id="@Free.Id"><i class="fas fa-star"></i></span>
                                            <span class="star" data-rating="5" data-appointment-id="@Free.Id"><i class="fas fa-star"></i></span>
                                        </div>
                                        <input type="hidden" id="rating-@Free.Id" name="rating" value="0" required />
                                    </div>
                                    <div class="mb-3">
                                        <label for="comment-@Free.Id" class="form-label fw-bold">Comment</label>
                                        <textarea class="form-control" id="comment-@Free.Id" name="comment" rows="4" maxlength="500" placeholder="Share your experience..." required></textarea>
                                    </div>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-paper-plane me-2"></i>Submit Review
                                    </button>
                                </form>
                            </div>
                        </div>
                    }

                    <!-- Reviews Display -->
                    <div class="row review-section">
                        <div class="col-12">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h3 class="text-primary"><i class="fas fa-comments me-2"></i>Reviews (<span id="review-count-@Free.Id">@((ViewData["Reviews"] as IEnumerable<dynamic>)?.Count() ?? 0)</span>)</h3>
                                <div class="sort-reviews">
                                    <select id="sortReviews-@Free.Id" class="form-select" style="width: 200px;">
                                        <option value="newest">Sort by: Newest First</option>
                                        <option value="oldest">Sort by: Oldest First</option>
                                        <option value="highest">Sort by: Highest Rating</option>
                                        <option value="lowest">Sort by: Lowest Rating</option>
                                    </select>
                                </div>
                            </div>
                            <div id="reviews-container-@Free.Id">
                                @{
                                    var reviews = ViewData["Reviews"] as IEnumerable<dynamic> ?? new List<dynamic>();
                                }
                                @if (reviews.Any())
                                {
                                    foreach (var review in reviews)
                                    {
                                        <div class="review-card" data-rating="@review.Rating" data-date="@review.CreatedAt">
                                            <div class="d-flex align-items-center mb-2">
                                                <div class="avatar">@(string.IsNullOrEmpty(review.UserName) ? "A" : review.UserName[0])</div>
                                                <div>
                                                    <strong>@(review.UserName ?? "Anonymous")</strong>
                                                    <div class="timestamp">@(DateTime.Parse(review.CreatedAt).ToString("MMM dd, yyyy"))</div>
                                                </div>
                                            </div>
                                            <div class="ratings mb-2">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <span class="star @(i <= review.Rating ? "active" : "")"><i class="fas fa-star"></i></span>
                                                }
                                            </div>
                                            <p class="mb-0">@review.Comment</p>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted" id="no-reviews-message-@Free.Id">No reviews yet. Be the first to share your experience!</p>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetServiceBadgeClass(string serviceType)
    {
        return serviceType switch
        {
            "nursing" => "bg-primary bg-opacity-10 ",
            "physical therapy" => "bg-primary bg-opacity-10 ",
            "Alternative medicine" => "bg-primary bg-opacity-10 ",
            _ => "bg-secondary bg-opacity-10 text-secondary"
        };
    }

    string GetServiceButtonClass(string serviceType)
    {
        return serviceType switch
        {
            "nursing" => "btn-primary",
            "physical therapy" => "btn-primary ",
            "Alternative medicine" => "btn-primary",
            _ => "btn-secondary"
        };
    }

    string GetServiceDescription(string serviceType)
    {
        return serviceType switch
        {
            "nursing" => "Professional nursing services including patient care, medication management, and post-operative support. Our nurses are experienced in working with medical tourists and understand the unique needs of international patients.",
            "physical therapy" => "Comprehensive physical therapy services to aid in recovery and rehabilitation. Specialized in working with medical tourists to ensure continuity of care during your treatment journey.",
            "Alternative medicine" => "Holistic alternative medicine approaches including acupuncture, herbal remedies, and traditional healing techniques tailored for medical tourists.",
            _ => "Professional healthcare services for medical tourists."
        };
    }

    List<string> GetSpecializations(string serviceType)
    {
        return serviceType switch
        {
            "nursing" => new List<string> { "Post-op Care", "Medication Management", "Wound Care", "Patient Monitoring" },
            "physical therapy" => new List<string> { "Rehabilitation", "Pain Management", "Mobility Training", "Sports Therapy" },
            "Alternative medicine" => new List<string> { "Acupuncture", "Herbal Medicine", "Cupping Therapy", "Mind-Body Techniques" },
            _ => new List<string> { "General Care" }
        };
    }
}
@section Scripts {
<script>
    document.getElementById('view-in-google-maps').addEventListener('click', () => {
    @foreach (var Free in Model)
    {
        @:const location1 = '@Free.location1';
        break; // Only need the first doctor
    }
    let lat, lng;
        try {
            [lat, lng] = location1.split(',').map(Number);
            if (isNaN(lat) || isNaN(lng)) {
                throw new Error('Invalid coordinates');
            }
        } catch (e) {
            console.log('Invalid location1 data:', location1);
            alert('Unable to open Google Maps: Invalid location1 data');
            return;
        }
        const googleMapsUrl = `https://www.google.com/maps?q=${lat},${lng}`;
        console.log('Opening Google Maps:', googleMapsUrl);
        window.open(googleMapsUrl, '_blank');
    });

</script>
<script>
        // Review Sorting
        function sortReviews(doctorId, sortBy) {
            const reviewsContainer = document.getElementById(`reviews-container-${doctorId}`);
            const reviewCards = Array.from(reviewsContainer.querySelectorAll('.review-card'));
            reviewCards.sort((a, b) => {
                const ratingA = parseInt(a.dataset.rating);
                const ratingB = parseInt(b.dataset.rating);
                const dateA = new Date(a.dataset.date);
                const dateB = new Date(b.dataset.date);
                if (sortBy === 'highest') return ratingB - ratingA;
                if (sortBy === 'lowest') return ratingA - ratingB;
                if (sortBy === 'newest') return dateB - dateA;
                if (sortBy === 'oldest') return dateA - dateB;
                return 0;
            });
            reviewsContainer.innerHTML = '';
            reviewCards.forEach(card => reviewsContainer.appendChild(card));
            if (!reviewCards.length) {
                reviewsContainer.innerHTML = `<p class="text-muted" id="no-reviews-message-${doctorId}">No reviews yet. Be the first to share your experience!</p>`;
            }
        }

        // Update Review Display
        function updateReviewDisplay(form, review) {
            const doctorId = form.querySelector('input[name="hotelId"]').value;
            const reviewsContainer = document.getElementById(`reviews-container-${doctorId}`);
            const noReviewsMessage = document.getElementById(`no-reviews-message-${doctorId}`);
            const reviewCountSpan = document.getElementById(`review-count-${doctorId}`);

            if (noReviewsMessage) {
                noReviewsMessage.remove();
            }

            const userName = review.UserName || 'Anonymous';
            const avatarChar = userName[0] || 'A';
            const createdAt = review.CreatedAt || new Date().toISOString();
            const rating = Math.min(Math.max(parseInt(review.Rating) || 0, 0), 5);
            const comment = review.Comment || '';

            let starsHtml = '';
            for (let i = 1; i <= 5; i++) {
                starsHtml += `<span class="star ${i <= rating ? 'active' : ''}"><i class="fas fa-star"></i></span>`;
            }

            const newReviewHtml = `
                <div class="review-card" data-rating="${rating}" data-date="${createdAt}">
                    <div class="d-flex align-items-center mb-2">
                        <div class="avatar">${avatarChar}</div>
                        <div>
                            <strong>${userName}</strong>
                            <div class="timestamp">${new Date(createdAt).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</div>
                        </div>
                    </div>
                    <div class="ratings mb-2">
                        ${starsHtml}
                    </div>
                    <p class="mb-0">${comment}</p>
                </div>
            `;

            reviewsContainer.insertAdjacentHTML('afterbegin', newReviewHtml);
            const currentCount = parseInt(reviewCountSpan.textContent) || 0;
            reviewCountSpan.textContent = currentCount + 1;
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Mobile menu toggle
            const toggler = document.querySelector('.navbar-toggler');
            const collapse = document.querySelector('.navbar-collapse');
            if (toggler) {
                toggler.addEventListener('click', () => collapse.classList.toggle('show'));
            }

            // Close dropdown on outside click
            document.addEventListener('click', (e) => {
                if (!e.target.closest('.navbar-toggler') && !e.target.closest('.navbar-collapse') && collapse.classList.contains('show')) {
                    collapse.classList.remove('show');
                }
            });

            // Star rating interaction
            document.querySelectorAll('.star').forEach(star => {
                star.addEventListener('click', () => {
                    const rating = star.getAttribute('data-rating');
                    const doctorId = star.getAttribute('data-appointment-id');
                    const ratingInput = document.querySelector(`#rating-${doctorId}`);
                    if (ratingInput) {
                        ratingInput.value = rating;
                        const starsGroup = star.closest('.ratings').querySelectorAll('.star');
                        starsGroup.forEach(s => {
                            s.classList.toggle('active', parseInt(s.getAttribute('data-rating')) <= parseInt(rating));
                        });
                    } else {
                        console.error(`Rating input not found for doctor ID: ${doctorId}`);
                    }
                });
            });

            // Review form submission
            const reviewForms = document.querySelectorAll('.review-form');
            reviewForms.forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    const submitButton = form.querySelector('button[type="submit"]');
                    submitButton.disabled = true;
                    submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Submitting...';

                    const rating = parseInt(form.querySelector('input[name="rating"]').value);
                    if (rating < 1 || rating > 5) {
                        showToast('Error', 'Please select a rating between 1 and 5.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                        return;
                    }

                    const comment = form.querySelector('textarea[name="comment"]').value.trim();
                    if (!comment) {
                        showToast('Error', 'Comment cannot be empty.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                        return;
                    }

                    const formData = new FormData(form);
                    const token = form.querySelector('input[name="__RequestVerificationToken"]').value;

                    fetch('/Tourist/SubmitReview', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'RequestVerificationToken': token
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                console.error('Non-OK response:', response.status, text);
                                try {
                                    const json = JSON.parse(text);
                                    throw new Error(json.message || `HTTP ${response.status}`);
                                } catch {
                                    throw new Error(`HTTP ${response.status}: Non-JSON response`);
                                }
                            });
                        }
                        return response.json().catch(error => {
                            console.error('JSON parse error:', error);
                            throw new Error('Invalid JSON response from server');
                        });
                    })
                    .then(data => {
                        if (data.success && data.review) {
                            updateReviewDisplay(form, data.review);
                            form.closest('.review-section').innerHTML = `
                                <div class="alert alert-success mt-3">
                                    <i class="fas fa-check-circle me-2"></i> Thank you! Your review has been submitted successfully.
                                </div>
                            `;
                            showToast('Success', data.message || 'Your review has been submitted successfully.', 'success');
                        } else {
                            showToast('Error', data.message || 'An error occurred while submitting your review.', 'error');
                        }
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                    })
                    .catch(error => {
                        console.error('SubmitReview Error:', error.message);
                        showToast('Error', 'Failed to submit review. Please try again.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                    });
                });
            });

            // Initialize sort dropdowns
        @foreach (var doctor in Model)
        {
            @:document.getElementById('sortReviews-@doctor.Id')?.addEventListener('change', (e) => sortReviews('@doctor.Id', e.target.value));
        }
        });
</script>
}