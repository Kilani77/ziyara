@{
    Layout = "_Layout";
}

<style>
    :root {
        --primary-color: #86B817;
        --primary-dark: #6A940D;
        --secondary-color: #2c3e50;
        --accent-color: #e74c3c;
        --light-bg: #f8f9fa;
        --card-radius: 16px;
        --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .px-4D {
        padding-right: 4.5rem !important;
        padding-left: 4.5rem !important;
    }

    .doctor-profile-section {
        padding: 5rem 0;
    }

    .page-header {
        text-align: center;
        margin-bottom: 4rem;
    }

    .page-title {
        font-size: 2.8rem;
        font-weight: 800;
        color: var(--secondary-color);
        margin-bottom: 1.2rem;
        position: relative;
        display: inline-block;
        background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .page-subtitle {
        font-size: 1.2rem;
        color: #6c757d;
        max-width: 700px;
        margin: 0 auto;
        line-height: 1.6;
    }

    .profile-card {
        border: none;
        border-radius: var(--card-radius);
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        background: white;
        transition: var(--transition);
        display: flex;
        flex-direction: row;
    }

        .profile-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }

    .profile-cardD {
        border: none;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        background: white;
        transition: var(--transition);
        display: flex;
        flex-direction: row;
    }

    .profile-card:hover {
        box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .doctor-sidebar {
        flex: 0 0 35%;
        padding: 3rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .doctor-avatar {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 2rem;
        border: 6px solid rgba(255,255,255,0.3);
        box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    }

        .doctor-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .img-placeholder {
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
    }

    .doctor-name {
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .doctor-title {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 1rem;
    }

    .profile-content {
        flex: 1;
        padding: 1.5rem;
        position: relative;
    }

    .badge-doctor {
        background-color: var(--primary-color);
        color: white;
        font-weight: 600;
        font-size: 0.9rem;
        padding: 0.5rem 1.5rem;
        border-radius: 50px;
        display: inline-block;
        margin-bottom: 1.5rem;
    }

    .content-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--secondary-color);
        margin-bottom: 2rem;
    }

    .price-badge {
        position: absolute;
        top: 2rem;
        right: 2rem;
        background: white;
        color: var(--primary-color);
        font-weight: 800;
        font-size: 1.8rem;
        padding: 0.5rem 1.5rem;
        border-radius: 12px;
    }

    .info-section {
        margin-bottom: 2.5rem;
    }

    .info-section-title {
        display: flex;
        align-items: center;
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--secondary-color);
        margin-bottom: 1.5rem;
    }

        .info-section-title i {
            color: var(--primary-color);
            margin-right: 0.75rem;
            font-size: 1.6rem;
        }

    .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .info-item {
        margin-bottom: 1.5rem;
    }

    .info-label {
        font-weight: 600;
        color: #6c757d;
        margin-bottom: 0.5rem;
    }

    .info-value {
        font-size: 1.1rem;
    }

    .rating-stars {
        color: #ffc107;
        font-size: 1.4rem;
    }

    .rating-number {
        color: #6c757d;
        font-weight: 600;
        margin-left: 0.5rem;
    }

    .btn-book {
        background: var(--primary-color);
        color: white;
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 1.1rem;
        border: none;
        display: inline-flex;
        align-items: center;
        transition: var(--transition);
        box-shadow: 0 8px 20px rgba(134, 184, 23, 0.3);
    }

        .btn-book:hover {
            background: var(--primary-dark);
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(134, 184, 23, 0.4);
            color: white;
        }

        .btn-book i {
            margin-right: 10px;
        }

    .about-text {
        color: #555;
        line-height: 1.8;
        font-size: 1.05rem;
        margin-bottom: 2.5rem;
    }

    @@media (max-width: 992px) {
        .profile-card {
            flex-direction: column;
        }

        .doctor-sidebar {
            padding: 2rem;
        }

        .info-grid {
            grid-template-columns: 1fr;
        }

        .price-badge {
            position: static;
            margin-bottom: 2rem;
            display: inline-block;
        }
    }

    @@media (max-width: 576px) {
        .page-title {
            font-size: 2.2rem;
        }

        .doctor-avatar {
            width: 150px;
            height: 150px;
        }

        .doctor-name {
            font-size: 1.8rem;
        }

        .profile-content {
            padding: 2rem;
        }
    }

    .navbar {
        background-color: #ffffff !important;
        transition: background-color 0.5s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* subtle depth */
        z-index: 1000; /* stays on top */
    }

        .navbar.sticky-top, .navbar.scrolled {
            background-color: #ffffff !important;
            transition: background-color 0.5s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* subtle depth */
            z-index: 1000; /* stays on top */
        }

    .navbar-light .navbar-nav .nav-link {
        color: #000000 !important;
        font-family: 'Nunito', sans-serif;
        position: relative;
        margin-right: 25px;
        padding: 20px 0;
        font-size: 18px;
        font-weight: 600;
        transition: .5s;
    }

    .shadow-sm {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    /* Review-specific styles */
    .review-section {
        padding: 50px;
        border-radius: 10px;
    }

    .review-card {
        background-color: #fff;
        border: none;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        transition: transform 0.3s, box-shadow 0.3s;
        animation: fadeIn 0.5s ease-in;
    }

        .review-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 18px rgba(0,0,0,0.15);
        }

        .review-card .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #86B817;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
            margin-right: 10px;
        }

        .review-card .timestamp {
            font-size: 0.85rem;
            color: #6c757d;
        }

    .review-form {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

        .review-form .form-control {
            border-radius: 8px;
            border: 1px solid #ced4da;
            transition: border-color 0.3s;
        }

            .review-form .form-control:focus {
                border-color: #3498db;
                box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);
            }

        .review-form .btn {
            border-radius: 8px;
            padding: 10px 20px;
        }

    .ratings {
        display: inline-flex;
        gap: 5px;
    }

    .star {
        color: #e4e5e9;
        cursor: pointer;
        transition: color 0.2s;
    }

        .star.active {
            color: #ffc107;
        }

    .sort-reviews {
        margin-bottom: 20px;
    }

    /* Animation for reviews */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .image-slider {
            height: 300px;
        }

        .slider-nav {
            width: 30px;
            height: 30px;
            font-size: 0.8rem;
        }
    }

    .navbar {
        background-color: #ffffff !important;
        transition: background-color 0.5s ease;
    }

        .navbar.sticky-top, .navbar.scrolled {
            background-color: #ffffff !important;
        }

    .navbar-light .navbar-nav .nav-link {
        color: #000000 !important;
        font-family: 'Nunito', sans-serif;
        position: relative;
        margin-right: 25px;
        padding: 20px 0;
        font-size: 18px;
        font-weight: 600;
        transition: .5s;
    }


    
</style>

<div class="container-fluid navbar-light p-0">
    <nav class=" navbar navbar-expand-lg navbar-light px-4 px-lg-5 py-3 py-lg-0 sticky-top shadow-sm">
        <a asp-action="Index" asp-controller="Home" class="navbar-brand p-0">
            <h1 class="text-primary m-0"><img class="fa fa-map-marker-alt me-3" src="~/Home/img/logoTest7Hedar-removebg-preview.png" alt="Logo">Ziyara</h1>

        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
            <span class="fa fa-bars"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <div class="navbar-nav ms-auto py-0">
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Admin/Dashboard">Admin</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>
                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>

                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>


                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>
                    <a class="nav-item nav-link" href="/Doctor/Dashboard">Dashboard</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "nursing")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Nurse/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "physical therapy")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Phsy/Dashboard">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.IsInRole("Freelance") && TempData["type"].ToString() == "Alternative medicine")
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link active Index">Home</a>

                    <a class="nav-item nav-link" href="/Alt/Dashboard">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Apartment"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Apartment/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Guide"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Guide/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated && User.IsInRole("Transportation"))
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>

                    <a class="nav-item nav-link" href="/Transportation/Dashboarder">Dashboard</a>

                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link  ">About</a>
                    <a href="#Our Service" class="nav-item nav-link">Service</a>

                    <a href="#Destination" class="nav-item nav-link">Destination</a>

                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>
                }
                else if (User.Identity.IsAuthenticated)
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>


                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link ">About</a>
                    <a asp-action="Appointments" asp-controller="Home" class="nav-item nav-link">Appointments</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>




                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <form asp-area="Identity" asp-page="/Account/Logout" method="post">
                                <button type="submit" class="btn btn-primary rounded-pill py-2 px-4 center">Logout</button>

                            </form>
                        </div>

                    </div>


                }
                else
                {
                    <a asp-action="Index" asp-controller="Home" class="nav-item nav-link  Index">Home</a>
                    <a asp-action="aboutus" asp-controller="Home" class="nav-item nav-link ">About</a>
                    <a href="/Home/Index#Destination" class="nav-item nav-link" id="Destination">Destination</a>


                    <a class="nav-item nav-link " href="/Identity/Account/Login">Login</a>
                    <div class="collapse navbar-collapse" id="navbarCollapse">
                        <div class="navbar-nav ms-auto py-0">
                            <a href="/Identity/Account/Register" class="btn btn-primary rounded-pill py-2 px-4 center">Register</a>
                        </div>
                    </div>

                }
                <a class="collapse navbar-collapse" id="navbarCollapse">

                    <img src="~/Home/img/jordanflag1.gif" alt="Computer man" style="width:55px;height:35px;padding-left:5px ">
                </a>
            </div>


        </div>
    </nav>
</div>

<div class="doctor-profile-section">
    <div class="container" style="margin-top:50px">

        <div class="text-center mb-6">
            <span class="badge bg-primary bg-opacity-10 mb-3 px-4D py-2 rounded-pill">
                <i class="fas fa-user-md me-2"></i> Doctor Profile
            </span>
            <h4 class="display-4 fw-bold mb-3">Certified doctors with wide international experience</h4>
            <p class="lead text-muted mx-auto" style="max-width: 700px;">
                Connect with highly qualified doctors dedicated to your health and wellness
            </p>
        </div>

        @foreach (var doctor in Model)
        {
            bool isAvailable = doctor.availalbe != null && doctor.availalbe.ToLower() == "true";

            <div class="profile-card">
                <!-- Doctor Sidebar - Left Section -->
                <div class="doctor-sidebar profile-cardD">
                    <div class="doctor-avatar">
                        @if (!string.IsNullOrEmpty(doctor.image))
                        {
                            <img src="@doctor.image" alt="Dr. @doctor.fullname">
                        }
                        else
                        {
                            <div class="img-placeholder">
                                <i class="fas fa-user-md"></i>
                            </div>
                        }
                    </div>
                    <h2 class="doctor-name">Dr. @doctor.fullname</h2>
                    @* <span class="badge bg-light text-dark border"> *@
                    @*     <i class="fas fa-envelope text-primary me-1"></i> @doctor.email *@
                    @* </span> *@
                    <p class="doctor-title badge-doctor">@doctor.majer Specialist</p>
                </div>

                <!-- Doctor Content - Right Section -->
                <div class="profile-content">
                    <div class="price-badge">
                        @doctor.price1 JOD <span style="font-size: 1rem; font-weight: 400;">per session</span>
                    </div>

                    <span class="badge-doctor">MEDICAL SPECIALIST</span>
                    <h2 class="content-title">Professional Details</h2>

                    <div class="info-section">
                        <h3 class="info-section-title">
                            <i class="bi bi-info-circle-fill"></i> Basic Information
                        </h3>

                        <div class="info-grid">
                            <div class="info-item">
                                <div class="info-label">Location:</div>
                                <div class="info-value">
                                    @if (!string.IsNullOrEmpty(doctor.Location))
                                    {
                                        <a href="https://www.google.com/maps/search/?api=1&query=@doctor.Location"
                                           target="_blank"
                                           class="btn btn-outline-primary btn-sm rounded-pill">
                                            View in Google Maps
                                        </a>
                                    }
                                    else
                                    {
                                        <span>Various locations</span>
                                    }
                                </div>
                            </div>

                            <div class="info-item">
                                <div class="info-label">Experience:</div>
                                <div class="info-value">@doctor.Experience years</div>
                            </div>
                        </div>
                    </div>

                    <div class="info-section">
                        <h3 class="info-section-title">
                            <i class="bi bi-person-fill"></i> About This Doctor
                        </h3>

                        <p class="about-text">@doctor.Bio1</p>

                        <div class="text-end">
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Patient"))
                            {
                                <a asp-action="App_Doc" asp-controller="Tourist" asp-route-flow="@ViewBag.Flow" asp-route-id="@doctor.Id" class="btn-book">
                                    <i class="fas fa-calendar-check"></i> Book Appointment
                                </a>
                            }
                            else
                            {
                                <a href="/Identity/Account/Login?returnUrl=@Url.Action("DetailsDoctors","Tourist", new { id = doctor.Id })"  class="btn-book">
                                    <i class="fas fa-calendar-check"></i> Book Appointment
                                </a>
                            }
                        </div>
                    </div>
                </div>
                               
            </div>
             <!-- Review Submission Form -->
 
             var Treviews = ViewData["Treviews"] as IEnumerable<dynamic> ?? new List<dynamic>();
 
             @if (User.Identity.IsAuthenticated && User.IsInRole("Patient") && !Treviews.Any())
             {
                 <div class="row mb-4 review-section">
                     <div class="col-12">
                         <h3 class="text-primary mb-3"><i class="fas fa-star me-2"></i>Write a Review</h3>
                         <form asp-action="SubmitReview" asp-controller="Tourist" method="post" class="review-form">
                             @Html.AntiForgeryToken()
                             <input type="hidden" name="serviceProviderId" value="@doctor.ServiceProviderId" />
                             <input type="hidden" name="hotelId" value="@doctor.Id" />
                             <input type="hidden" name="appointmentType" value="Doctor" />
                             <input type="hidden" name="returnUrl" value="@Url.Action("DetailsDoctors", "Tourist", new { id = doctor.Id })" />
                             <div class="mb-3">
                                 <label class="form-label fw-bold">Rating</label>
                                 <div class="ratings">
                                     <span class="star" data-rating="1" data-appointment-id="@doctor.Id"><i class="fas fa-star"></i></span>
                                     <span class="star" data-rating="2" data-appointment-id="@doctor.Id"><i class="fas fa-star"></i></span>
                                     <span class="star" data-rating="3" data-appointment-id="@doctor.Id"><i class="fas fa-star"></i></span>
                                     <span class="star" data-rating="4" data-appointment-id="@doctor.Id"><i class="fas fa-star"></i></span>
                                     <span class="star" data-rating="5" data-appointment-id="@doctor.Id"><i class="fas fa-star"></i></span>
                                 </div>
                                 <input type="hidden" id="rating-@doctor.Id" name="rating" value="0" required />
                             </div>
                             <div class="mb-3">
                                 <label for="comment-@doctor.Id" class="form-label fw-bold">Comment</label>
                                 <textarea class="form-control" id="comment-@doctor.Id" name="comment" rows="4" maxlength="500" placeholder="Share your experience..." required></textarea>
                             </div>
                             <button type="submit" class="btn btn-primary">
                                 <i class="fas fa-paper-plane me-2"></i>Submit Review
                             </button>
                         </form>
                     </div>
                 </div>
             }

             <!-- Reviews Display -->
             <div class="row review-section">
                 <div class="col-12">
                     <div class="d-flex justify-content-between align-items-center mb-3">
                         <h3 class="text-primary"><i class="fas fa-comments me-2"></i>Reviews (<span id="review-count-@doctor.Id">@((ViewData["Reviews"] as IEnumerable<dynamic>)?.Count() ?? 0)</span>)</h3>
                         <div class="sort-reviews">
                             <select id="sortReviews-@doctor.Id" class="form-select" style="width: 200px;">
                                 <option value="newest">Sort by: Newest First</option>
                                 <option value="oldest">Sort by: Oldest First</option>
                                 <option value="highest">Sort by: Highest Rating</option>
                                 <option value="lowest">Sort by: Lowest Rating</option>
                             </select>
                         </div>
                     </div>
                     <div id="reviews-container-@doctor.Id">
                         @{
                           var  reviews = ViewData["Reviews"] as IEnumerable<dynamic> ?? new List<dynamic>();
                         }
                         @if (reviews.Any())
                         {
                             foreach (var review in reviews)
                             {
                                 <div class="review-card" data-rating="@review.Rating" data-date="@review.CreatedAt">
                                     <div class="d-flex align-items-center mb-2">
                                         <div class="avatar">@(string.IsNullOrEmpty(review.UserName) ? "A" : review.UserName[0])</div>
                                         <div>
                                             <strong>@(review.UserName ?? "Anonymous")</strong>
                                             <div class="timestamp">@(DateTime.Parse(review.CreatedAt).ToString("MMM dd, yyyy"))</div>
                                         </div>
                                     </div>
                                     <div class="ratings mb-2">
                                         @for (int i = 1; i <= 5; i++)
                                         {
                                             <span class="star @(i <= review.Rating ? "active" : "")"><i class="fas fa-star"></i></span>
                                         }
                                     </div>
                                     <p class="mb-0">@review.Comment</p>
                                 </div>
                             }
                         }
                         else
                         {
                             <p class="text-muted" id="no-reviews-message-@doctor.Id">No reviews yet. Be the first to share your experience!</p>
                         }
                     </div>
                 </div>
             </div>
         }
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script>
        // Initialize Bootstrap Toast
        const toastElement = document.getElementById('reviewToast');
        if (!toastElement) {
            console.error('Toast element not found. Ensure reviewToast is defined in _Layout.cshtml.');
        } else {
            const toastTitle = document.getElementById('toastTitle');
            const toastMessage = document.getElementById('toastMessage');
            const toast = new bootstrap.Toast(toastElement);

            function showToast(title, message, type) {
                if (toastTitle && toastMessage) {
                    toastTitle.textContent = title;
                    toastMessage.textContent = message;
                    toastElement.className = `toast position-fixed bottom-0 end-0 m-3 ${type === 'success' ? 'bg-success text-white' : 'bg-danger text-white'}`;
                    toast.show();
                } else {
                    console.error('Toast title or message element not found.');
                }
            }
        }

        // Review Sorting
        function sortReviews(doctorId, sortBy) {
            const reviewsContainer = document.getElementById(`reviews-container-${doctorId}`);
            const reviewCards = Array.from(reviewsContainer.querySelectorAll('.review-card'));
            reviewCards.sort((a, b) => {
                const ratingA = parseInt(a.dataset.rating);
                const ratingB = parseInt(b.dataset.rating);
                const dateA = new Date(a.dataset.date);
                const dateB = new Date(b.dataset.date);
                if (sortBy === 'highest') return ratingB - ratingA;
                if (sortBy === 'lowest') return ratingA - ratingB;
                if (sortBy === 'newest') return dateB - dateA;
                if (sortBy === 'oldest') return dateA - dateB;
                return 0;
            });
            reviewsContainer.innerHTML = '';
            reviewCards.forEach(card => reviewsContainer.appendChild(card));
            if (!reviewCards.length) {
                reviewsContainer.innerHTML = `<p class="text-muted" id="no-reviews-message-${doctorId}">No reviews yet. Be the first to share your experience!</p>`;
            }
        }

        // Update Review Display
        function updateReviewDisplay(form, review) {
            const doctorId = form.querySelector('input[name="hotelId"]').value;
            const reviewsContainer = document.getElementById(`reviews-container-${doctorId}`);
            const noReviewsMessage = document.getElementById(`no-reviews-message-${doctorId}`);
            const reviewCountSpan = document.getElementById(`review-count-${doctorId}`);

            if (noReviewsMessage) {
                noReviewsMessage.remove();
            }

            const userName = review.UserName || 'Anonymous';
            const avatarChar = userName[0] || 'A';
            const createdAt = review.CreatedAt || new Date().toISOString();
            const rating = Math.min(Math.max(parseInt(review.Rating) || 0, 0), 5);
            const comment = review.Comment || '';

            let starsHtml = '';
            for (let i = 1; i <= 5; i++) {
                starsHtml += `<span class="star ${i <= rating ? 'active' : ''}"><i class="fas fa-star"></i></span>`;
            }

            const newReviewHtml = `
                <div class="review-card" data-rating="${rating}" data-date="${createdAt}">
                    <div class="d-flex align-items-center mb-2">
                        <div class="avatar">${avatarChar}</div>
                        <div>
                            <strong>${userName}</strong>
                            <div class="timestamp">${new Date(createdAt).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}</div>
                        </div>
                    </div>
                    <div class="ratings mb-2">
                        ${starsHtml}
                    </div>
                    <p class="mb-0">${comment}</p>
                </div>
            `;

            reviewsContainer.insertAdjacentHTML('afterbegin', newReviewHtml);
            const currentCount = parseInt(reviewCountSpan.textContent) || 0;
            reviewCountSpan.textContent = currentCount + 1;
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Mobile menu toggle
            const toggler = document.querySelector('.navbar-toggler');
            const collapse = document.querySelector('.navbar-collapse');
            if (toggler) {
                toggler.addEventListener('click', () => collapse.classList.toggle('show'));
            }

            // Close dropdown on outside click
            document.addEventListener('click', (e) => {
                if (!e.target.closest('.navbar-toggler') && !e.target.closest('.navbar-collapse') && collapse.classList.contains('show')) {
                    collapse.classList.remove('show');
                }
            });

            // Star rating interaction
            document.querySelectorAll('.star').forEach(star => {
                star.addEventListener('click', () => {
                    const rating = star.getAttribute('data-rating');
                    const doctorId = star.getAttribute('data-appointment-id');
                    const ratingInput = document.querySelector(`#rating-${doctorId}`);
                    if (ratingInput) {
                        ratingInput.value = rating;
                        const starsGroup = star.closest('.ratings').querySelectorAll('.star');
                        starsGroup.forEach(s => {
                            s.classList.toggle('active', parseInt(s.getAttribute('data-rating')) <= parseInt(rating));
                        });
                    } else {
                        console.error(`Rating input not found for doctor ID: ${doctorId}`);
                    }
                });
            });

            // Review form submission
            const reviewForms = document.querySelectorAll('.review-form');
            reviewForms.forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    const submitButton = form.querySelector('button[type="submit"]');
                    submitButton.disabled = true;
                    submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Submitting...';

                    const rating = parseInt(form.querySelector('input[name="rating"]').value);
                    if (rating < 1 || rating > 5) {
                        showToast('Error', 'Please select a rating between 1 and 5.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                        return;
                    }

                    const comment = form.querySelector('textarea[name="comment"]').value.trim();
                    if (!comment) {
                        showToast('Error', 'Comment cannot be empty.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                        return;
                    }

                    const formData = new FormData(form);
                    const token = form.querySelector('input[name="__RequestVerificationToken"]').value;

                    fetch('/Tourist/SubmitReview', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest',
                            'RequestVerificationToken': token
                        }
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.text().then(text => {
                                console.error('Non-OK response:', response.status, text);
                                try {
                                    const json = JSON.parse(text);
                                    throw new Error(json.message || `HTTP ${response.status}`);
                                } catch {
                                    throw new Error(`HTTP ${response.status}: Non-JSON response`);
                                }
                            });
                        }
                        return response.json().catch(error => {
                            console.error('JSON parse error:', error);
                            throw new Error('Invalid JSON response from server');
                        });
                    })
                    .then(data => {
                        if (data.success && data.review) {
                            updateReviewDisplay(form, data.review);
                            form.closest('.review-section').innerHTML = `
                                <div class="alert alert-success mt-3">
                                    <i class="fas fa-check-circle me-2"></i> Thank you! Your review has been submitted successfully.
                                </div>
                            `;
                            showToast('Success', data.message || 'Your review has been submitted successfully.', 'success');
                        } else {
                            showToast('Error', data.message || 'An error occurred while submitting your review.', 'error');
                        }
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                    })
                    .catch(error => {
                        console.error('SubmitReview Error:', error.message);
                        showToast('Error', 'Failed to submit review. Please try again.', 'error');
                        submitButton.disabled = false;
                        submitButton.innerHTML = '<i class="fas fa-paper-plane me-2"></i>Submit Review';
                    });
                });
            });

            // Initialize sort dropdowns
            @foreach (var doctor in Model)
            {
                @:document.getElementById('sortReviews-@doctor.Id')?.addEventListener('change', (e) => sortReviews('@doctor.Id', e.target.value));
            }
        });
    </script>
} 